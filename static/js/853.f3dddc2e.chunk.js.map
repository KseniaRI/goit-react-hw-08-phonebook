{"version":3,"file":"static/js/853.f3dddc2e.chunk.js","mappings":"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","sources":["Forms.styled.js","components/page-title/PageTitle.styled.js","components/page-title/PageTitle.jsx","components/header/Header.styled.js","components/header/Header.jsx","components/phonebook-form/PhonebokForm.jsx","pages/Home.jsx","pages/auth-pages/AuthPages.styled.js","redux/contacts/phonebook-selectors.js"],"sourcesContent":["import Button from 'react-bootstrap/Button';\nimport styled from '@emotion/styled';\nimport { Form } from 'react-bootstrap';\n\nexport const StyledButton = styled(Button)`\n    background-color: ${p => p.theme.colors.white};\n    border-color: ${p => p.theme.colors.accent};\n    border-style: ${p => p.theme.borders.normal};\n    color: ${p => p.theme.colors.black};\n\n    &:hover,\n    &:focus{\n      background-color: ${p => p.theme.colors.accent};\n      border-color: ${p => p.theme.colors.accent};\n    }\n`;\n\nexport const StyledForm = styled(Form)`\n\n    width: ${p => p.theme.space[9]}px;\n    margin: 0 auto;\n    border: ${p => p.theme.borders.normal};\n    border-color: ${p => p.theme.colors.accent};\n    border-radius: ${p => p.theme.radii.normal};\n    padding: ${p => p.theme.space[4]}px;\n    background-color: ${p => p.theme.colors.accent};\n    opacity: 0.9;\n   \n`;","import styled from '@emotion/styled';\n\nexport const MainTitle = styled.h1`\nfont-size: ${p => p.theme.fontSizes.xl};\nfont-weight: 500;\nletter-spacing: 0.8em;\ncolor: ${p => p.theme.colors.white};\ntext-transform: uppercase;\nmargin-bottom: 40px;\n`;","import { MainTitle } from \"./PageTitle.styled\";\nimport PropTypes from 'prop-types';\n\nexport const PageTitle = ({ title }) => <MainTitle>{title}</MainTitle>;\n\nPageTitle.propTypes = {\n    title: PropTypes.string.isRequired\n}","import styled from \"@emotion/styled\";\n\n\nexport const StyledHeader = styled.section`\ndisplay: flex;\nalign-items: center;\njustify-content: center;\n    background-image: linear-gradient(rgba(47, 48, 58, 0.4), rgba(47, 48, 58, 0.4)),\n    url('https://cdn.pixabay.com/photo/2018/10/08/07/39/network-3732122_960_720.jpg');\n    background-repeat: no-repeat;\n    background-position: center;\n    background-size: cover;\n    width: 100%;\n    height: 360px;\n    margin-bottom: ${p => p.theme.space[5]}px; \n`;","import { PageTitle } from \"components/page-title/PageTitle\"\nimport { StyledHeader } from \"./Header.styled\"\n\nexport const Header = () => {\n    return (\n        <StyledHeader>\n            <PageTitle title=\"Phonebook\"/>\n        </StyledHeader>\n    )\n}","import { useDispatch, useSelector } from 'react-redux';\nimport { Formik } from 'formik';\nimport Form from 'react-bootstrap/Form';\nimport * as Yup from 'yup';\nimport PropTypes from 'prop-types';\nimport { getIsLoading, getItems } from 'redux/contacts/phonebook-selectors';\nimport { saveContact } from 'redux/contacts/phonebook-operations';\nimport { StyledButton, StyledForm } from '../../Forms.styled';\nimport { toast } from 'react-toastify';\nimport { Navigate, NavLink } from 'react-router-dom';\nimport { Message } from 'pages/auth-pages/AuthPages.styled';\nimport { getIsLoggedIn } from 'redux/auth/auth-selectors';\n\n\n\nconst phonePattern = /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/;\nconst namePattern = /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/;\n\nexport const PhonebookForm = () => {\n  const items = useSelector(getItems);\n  const dispatch = useDispatch();\n  const isAdding = useSelector(getIsLoading);\n  const loggedIn = useSelector(getIsLoggedIn);\n\n    return (\n      <>\n        {isAdding ? <Navigate to='/contacts' /> :\n          <>\n            {!loggedIn && <Message>To start <NavLink to=\"/login\">Log in to your account</NavLink> or <NavLink to=\"register\">Register</NavLink></Message>}\n            <Formik\n                initialValues={{ name: '', number: '' }}\n                validationSchema={Yup.object({\n                    name: Yup.string().matches(namePattern, 'Insert first name and second name').required('Required'),\n                    number: Yup.string().matches(phonePattern, 'Phone number is not valid').required('Required')\n                })\n                } \n                onSubmit={({ name, number }, { resetForm }) => {\n                  const contactNames = items.map(item => item.name);\n\n                  if (contactNames.includes(name)) {\n                    toast.error(`${name} is already in contacts`);\n                  } else {\n                    const newContact = { name, number };\n                    dispatch(saveContact(newContact));\n                  }\n                  resetForm();\n                }}\n                >\n                  {({\n                    handleSubmit,\n                    handleChange,\n                    values,\n                    errors,\n                    isInvalid,\n                  }) => (\n                    <StyledForm noValidate onSubmit={handleSubmit}>\n                      <Form.Group className=\"mb-3\" controlId=\"formContactName\">\n                          <Form.Label>Name</Form.Label>\n                          <Form.Control\n                            type=\"text\"\n                            name=\"name\"\n                            placeholder=\"Jack Black\"\n                            value={values.name}\n                            onChange={handleChange}\n                            isInvalid={!!errors.name}\n                        />\n                          <Form.Control.Feedback type=\"invalid\">\n                              {errors.name}\n                          </Form.Control.Feedback>\n                        </Form.Group>\n                  \n                        <Form.Group className=\"mb-3\" controlId=\"formContactNumber\">\n                          <Form.Label>Number</Form.Label>\n                          <Form.Control\n                            type=\"tel\"\n                            name=\"number\"\n                            placeholder=\"123-45-67\"\n                            value={values.number}\n                            onChange={handleChange}\n                            isInvalid={!!errors.number}\n                        />\n                        <Form.Control.Feedback type=\"invalid\">\n                            {errors.number}\n                          </Form.Control.Feedback>\n                        </Form.Group>\n                        <StyledButton variant=\"primary\" type=\"submit\">\n                          Add contact\n                        </StyledButton>\n                    </StyledForm>\n                  )}\n            </Formik>\n      </>\n        }\n    </>\n    )\n}\n\nPhonebookForm.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired\n  })\n  )\n}","import { Header } from \"components/header/Header\";\nimport { PhonebookForm } from \"components/phonebook-form/PhonebokForm\";\nimport { Container } from \"react-bootstrap\";\n\n\nconst HomePage = () => {\n    return (\n        <Container>\n            <Header/>\n            <PhonebookForm />\n        </Container>\n    )\n}\n\nexport default HomePage;","import styled from \"@emotion/styled\";\nimport { Container } from \"react-bootstrap\";\n\nexport const Message = styled.p`\nwidth: fit-content;\nmargin: 0 auto;\nfont-size: ${p => p.theme.fontSizes.l};\nfont-weight: ${p => p.theme.fontWeights.bold};\ncolor: ${p => p.theme.colors.title};\nbackground-color: ${p => p.theme.colors.white};\nmargin-bottom: ${p => p.theme.space[5]}px;\nborder-radius: ${p => p.theme.radii.normal};\nopacity: 0.9;\n`;\n\nexport const StyledContainer = styled(Container)`\n    padding-top: ${p => p.theme.space[6]}px;\n    padding-bottom:  ${p => p.theme.space[6]}px;\n    background-repeat: no-repeat;\n    background-position: center;\n    background-size: cover;\n    background-image: url('https://cdn.pixabay.com/photo/2018/11/29/21/51/social-media-3846597_960_720.png');\n`;\n\n","export const getItems = state => state.phonebook.items.contacts;\n\nexport const getIsLoading = state => state.phonebook.items.isLoading;\nexport const getFilter = state => state.phonebook.filter;\n\nexport const getVisibleContacts = state => {\n  const allContacts = getItems(state);\n  \n  const phonebookFilter = getFilter(state);\n  return allContacts.filter(contact => {\n   return contact.name.toLowerCase().includes(phonebookFilter.toLowerCase())\n  });\n\n  };"],"names":["StyledButton","styled","Button","p","theme","colors","white","accent","borders","normal","black","StyledForm","Form","space","radii","MainTitle","fontSizes","xl","PageTitle","title","StyledHeader","Header","phonePattern","namePattern","PhonebookForm","items","useSelector","getItems","dispatch","useDispatch","isAdding","getIsLoading","loggedIn","getIsLoggedIn","to","initialValues","name","number","validationSchema","Yup","matches","required","onSubmit","resetForm","map","item","includes","toast","newContact","saveContact","handleSubmit","handleChange","values","errors","isInvalid","noValidate","className","controlId","type","placeholder","value","onChange","S","variant","Container","Message","l","fontWeights","bold","StyledContainer","state","phonebook","contacts","isLoading","getFilter","filter","getVisibleContacts","allContacts","phonebookFilter","contact","toLowerCase"],"sourceRoot":""}