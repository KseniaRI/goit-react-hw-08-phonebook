{"version":3,"file":"static/js/847.0cf02c6a.chunk.js","mappings":"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","sources":["Forms.styled.js","components/page-title/PageTitle.styled.js","components/page-title/PageTitle.jsx","components/phonebook-form/PhonebokForm.jsx","pages/Home.jsx","redux/contacts/phonebook-selectors.js"],"sourcesContent":["import Button from 'react-bootstrap/Button';\nimport styled from '@emotion/styled';\nimport { Form } from 'react-bootstrap';\n\nexport const StyledButton = styled(Button)`\n    background-color: ${p => p.theme.colors.white};\n    border-color: ${p => p.theme.colors.accent};\n    border-style: ${p => p.theme.borders.normal};\n    color: ${p => p.theme.colors.black};\n\n    &:hover,\n    &:focus{\n      background-color: ${p => p.theme.colors.accent};\n      border-color: ${p => p.theme.colors.accent};\n    }\n`;\n\nexport const StyledForm = styled(Form)`\n    width: ${p => p.theme.space[9]}px;\n    margin: 0 auto;\n    border: ${p => p.theme.borders.normal};\n    border-color: ${p => p.theme.colors.accent};\n    border-radius: ${p => p.theme.radii.normal};\n    padding: ${p => p.theme.space[4]}px;\n`;","import styled from '@emotion/styled';\n\nexport const MainTitle = styled.h1`\ntext-align: center;\nfont-size: ${p => p.theme.fontSizes.xl};\nfont-weight: 500;\ncolor: ${p => p.theme.colors.title};\ntext-transform: uppercase;\nmargin-bottom: 40px;\n`;","import { MainTitle } from \"./PageTitle.styled\";\nimport PropTypes from 'prop-types';\n\nexport const PageTitle = ({ title }) => <MainTitle>{title}</MainTitle>;\n\nPageTitle.propTypes = {\n    title: PropTypes.string.isRequired\n}","import { useDispatch, useSelector } from 'react-redux';\nimport { Formik } from 'formik';\nimport Form from 'react-bootstrap/Form';\nimport * as Yup from 'yup';\nimport PropTypes from 'prop-types';\nimport { getItems } from 'redux/contacts/phonebook-selectors';\nimport { saveContact } from 'redux/contacts/phonebook-operations';\nimport { StyledButton, StyledForm } from '../../Forms.styled';\nimport { toast } from 'react-toastify';\nimport { useState } from 'react';\nimport { Navigate } from 'react-router-dom';\n\nconst phonePattern = /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/;\nconst namePattern = /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/;\n\nexport const PhonebookForm = () => {\n  const items = useSelector(getItems);\n  const dispatch = useDispatch();\n\n  const [isAdded, setIsAdded] = useState(false);\n\n    return (\n      <>\n        {isAdded ? <Navigate to='/contacts' /> :\n    <Formik\n        initialValues={{ name: '', number: '' }}\n        validationSchema={Yup.object({\n            name: Yup.string().matches(namePattern, 'Insert first name and second name').required('Required'),\n            number: Yup.string().matches(phonePattern, 'Phone number is not valid').required('Required')\n        })\n        } \n        onSubmit={({ name, number }, { resetForm }) => {\n          const contactNames = items.map(item => item.name);\n              \n          if (contactNames.includes(name)) {\n            toast.error(`${name} is already in contacts`);\n          } else {\n            const newContact = { name, number };\n            dispatch(saveContact(newContact));\n            setIsAdded(!isAdded);\n          }\n          resetForm();\n        }}\n        >\n          {({\n            handleSubmit,\n            handleChange,\n            values,\n            touched,\n            errors,\n            isInvalid,\n          }) => (\n            <StyledForm noValidate onSubmit={handleSubmit}>\n              <Form.Group className=\"mb-3\" controlId=\"formContactName\">\n                  <Form.Label>Name</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    name=\"name\"\n                    placeholder=\"Jack Black\"\n                    value={values.name}\n                    onChange={handleChange}\n                    isInvalid={!!errors.name}\n                />\n                  <Form.Control.Feedback type=\"invalid\">\n                      {errors.name}\n                  </Form.Control.Feedback>\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\" controlId=\"formContactNumber\">\n                  <Form.Label>Number</Form.Label>\n                  <Form.Control\n                    type=\"tel\"\n                    name=\"number\"\n                    placeholder=\"123-45-67\"\n                    value={values.number}\n                    onChange={handleChange}\n                    // isValid={touched.number && !errors.number}\n                    isInvalid={!!errors.number}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                    {errors.number}\n                  </Form.Control.Feedback>\n                </Form.Group>\n                <StyledButton variant=\"primary\" type=\"submit\">\n                  Submit\n                </StyledButton>\n\n            </StyledForm>\n          )}\n          </Formik>\n        }\n    </>\n    )\n}\n\nPhonebookForm.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired\n  })\n  )\n}","import { Box } from \"components/Box\"\nimport { PageTitle } from \"components/page-title/PageTitle\";\nimport { PhonebookForm } from \"components/phonebook-form/PhonebokForm\";\n\n\nconst HomePage = () => {\n    return (\n        <Box as=\"div\">\n            <PageTitle title=\"Phonebook\" />\n            <PhonebookForm />\n        </Box>\n    )\n}\n\nexport default HomePage;","export const getItems = state => state.phonebook.items;\nexport const getFilter = state => state.phonebook.filter;\n\nexport const getVisibleContacts = state => {\n    const allContacts = getItems(state);\n    const filter = getFilter(state);\n    return allContacts.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()));\n  };"],"names":["StyledButton","styled","Button","p","theme","colors","white","accent","borders","normal","black","StyledForm","Form","space","radii","MainTitle","fontSizes","xl","title","PageTitle","phonePattern","namePattern","PhonebookForm","items","useSelector","getItems","dispatch","useDispatch","useState","isAdded","setIsAdded","to","initialValues","name","number","validationSchema","Yup","matches","required","onSubmit","resetForm","map","item","includes","toast","newContact","saveContact","handleSubmit","handleChange","values","errors","touched","isInvalid","noValidate","className","controlId","type","placeholder","value","onChange","S","variant","Box","as","state","phonebook","getFilter","filter","getVisibleContacts","allContacts","contact","toLowerCase"],"sourceRoot":""}