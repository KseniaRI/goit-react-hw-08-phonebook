{"version":3,"file":"static/js/725.025ac317.chunk.js","mappings":"6OAIaA,GAAeC,EAAAA,EAAAA,GAAOC,EAAAA,EAAPD,CAAH,kNACD,SAAAE,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,SACxB,SAAAH,GAAC,OAAIA,EAAEC,MAAMC,OAAOE,UACpB,SAAAJ,GAAC,OAAIA,EAAEC,MAAMI,QAAQC,UAC5B,SAAAN,GAAC,OAAIA,EAAEC,MAAMC,OAAOK,SAIP,SAAAP,GAAC,OAAIA,EAAEC,MAAMC,OAAOE,UACxB,SAAAJ,GAAC,OAAIA,EAAEC,MAAMC,OAAOE,UAI7BI,GAAaV,EAAAA,EAAAA,GAAOW,EAAAA,EAAPX,CAAH,wJACV,SAAAE,GAAC,OAAIA,EAAEC,MAAMS,MAAM,MAElB,SAAAV,GAAC,OAAIA,EAAEC,MAAMI,QAAQC,UACf,SAAAN,GAAC,OAAIA,EAAEC,MAAMC,OAAOE,UACnB,SAAAJ,GAAC,OAAIA,EAAEC,MAAMU,MAAML,UACzB,SAAAN,GAAC,OAAIA,EAAEC,MAAMS,MAAM,O,0HCsElC,UApFqB,WACnB,IAAME,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,GAE7B,OACE,8BACGF,GAAW,SAAC,KAAD,CAAUG,GAAG,IAAIC,SAAS,KACpC,SAAC,KAAD,CACEC,cAAe,CAAEC,KAAM,GAAIC,MAAO,GAAIC,SAAU,IAChDC,iBAAkBC,EAAAA,GAAW,CAC3BJ,KAAMI,EAAAA,KAAaC,SAAS,YAC5BJ,MAAOG,EAAAA,KAAaH,MAAM,yBAAyBI,SAAS,YAC5DH,SAAUE,EAAAA,KAAaC,SAAS,cAGlCC,SAAU,cAA+C,IAA5CN,EAA2C,EAA3CA,KAAMC,EAAqC,EAArCA,MAAOC,EAA8B,EAA9BA,SAAcK,EAAgB,EAAhBA,UACtCC,QAAQC,IAAI,CAAET,KAAAA,EAAMC,MAAAA,EAAOC,SAAAA,IAC3BV,GAASkB,EAAAA,EAAAA,IAAS,CAAEV,KAAAA,EAAMC,MAAAA,EAAOC,SAAAA,KACjCK,KAXJ,SAcG,gBACCI,EADD,EACCA,aACAC,EAFD,EAECA,aACAC,EAHD,EAGCA,OAEAC,GALD,EAICC,QAJD,EAKCD,QALD,EAMCE,UAND,OAQC,UAAC,IAAD,CAAYC,YAAU,EAACX,SAAUK,EAAjC,WACE,UAAC,UAAD,CAAYO,UAAU,OAAOC,UAAU,mBAAvC,WACE,SAAC,UAAD,oBACA,SAAC,YAAD,CACEC,KAAK,OAAOpB,KAAK,OACjBqB,YAAY,aACZC,MAAOT,EAAOb,KACduB,SAAUX,EACVI,YAAaF,EAAOd,QAEtB,SAAC,qBAAD,CAAuBoB,KAAK,UAA5B,SACGN,EAAOd,WAIZ,UAAC,UAAD,CAAYkB,UAAU,OAAOC,UAAU,oBAAvC,WACE,SAAC,UAAD,6BACA,SAAC,YAAD,CACEC,KAAK,QACLpB,KAAK,QACLqB,YAAY,cACZC,MAAOT,EAAOZ,MACdsB,SAAUX,EACVI,YAAaF,EAAOb,SAEtB,SAAC,qBAAD,CAAuBmB,KAAK,UAA5B,SACGN,EAAOb,YAIZ,UAAC,UAAD,CAAYiB,UAAU,OAAOC,UAAU,uBAAvC,WACE,SAAC,UAAD,wBACA,SAAC,YAAD,CACEC,KAAK,WACLpB,KAAK,WACLqB,YAAY,WACZC,MAAOT,EAAOX,SACdqB,SAAUX,EACVI,YAAaF,EAAOZ,YAEtB,SAAC,qBAAD,CAAuBkB,KAAK,UAA5B,SACGN,EAAOZ,eAGZ,SAAC,EAAAsB,EAAD,CAAcC,QAAQ,UAAUL,KAAK,SAArC","sources":["Forms.styled.js","pages/auth-pages/RegisterPage.jsx"],"sourcesContent":["import Button from 'react-bootstrap/Button';\nimport styled from '@emotion/styled';\nimport { Form } from 'react-bootstrap';\n\nexport const StyledButton = styled(Button)`\n    background-color: ${p => p.theme.colors.white};\n    border-color: ${p => p.theme.colors.accent};\n    border-style: ${p => p.theme.borders.normal};\n    color: ${p => p.theme.colors.black};\n\n    &:hover,\n    &:focus{\n      background-color: ${p => p.theme.colors.accent};\n      border-color: ${p => p.theme.colors.accent};\n    }\n`;\n\nexport const StyledForm = styled(Form)`\n    width: ${p => p.theme.space[9]}px;\n    margin: 0 auto;\n    border: ${p => p.theme.borders.normal};\n    border-color: ${p => p.theme.colors.accent};\n    border-radius: ${p => p.theme.radii.normal};\n    padding: ${p => p.theme.space[4]}px;\n`;","import Form from 'react-bootstrap/Form';\nimport { StyledButton, StyledForm } from '../../Forms.styled';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { register } from 'redux/auth/auth-operations';\nimport { Navigate } from 'react-router-dom';\nimport { getIsLoggedIn } from 'redux/auth/auth-selectors';\n\nconst RegisterPage = () => {\n  const dispatch = useDispatch();\n  const loggedIn = useSelector(getIsLoggedIn);\n  \n  return (\n    <>\n      {loggedIn ? <Navigate to='/' replace={true} /> :\n        <Formik\n          initialValues={{ name: '', email: '', password: '' }}\n          validationSchema={Yup.object({\n            name: Yup.string().required('Required'),\n            email: Yup.string().email('must be a valid email').required('Required'),\n            password: Yup.string().required('Required'),\n          })\n          }\n          onSubmit={({ name, email, password }, { resetForm }) => {\n            console.log({ name, email, password });\n            dispatch(register({ name, email, password }));\n            resetForm();\n          }}\n        >\n          {({\n            handleSubmit,\n            handleChange,\n            values,\n            touched,\n            errors,\n            isInvalid,\n          }) => (\n            <StyledForm noValidate onSubmit={handleSubmit}>\n              <Form.Group className=\"mb-3\" controlId=\"formRegisterName\">\n                <Form.Label>Name</Form.Label>\n                <Form.Control\n                  type=\"name\" name=\"name\"\n                  placeholder=\"Enter name\"\n                  value={values.name}\n                  onChange={handleChange}\n                  isInvalid={!!errors.name}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.name}\n                </Form.Control.Feedback>\n              </Form.Group>\n\n              <Form.Group className=\"mb-3\" controlId=\"formRegisterEmail\">\n                <Form.Label>Email address</Form.Label>\n                <Form.Control\n                  type=\"email\"\n                  name=\"email\"\n                  placeholder=\"Enter email\"\n                  value={values.email}\n                  onChange={handleChange}\n                  isInvalid={!!errors.email}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.email}\n                </Form.Control.Feedback>\n              </Form.Group>\n\n              <Form.Group className=\"mb-3\" controlId=\"formRegisterPassword\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control\n                  type=\"password\"\n                  name=\"password\"\n                  placeholder=\"Password\"\n                  value={values.password}\n                  onChange={handleChange}\n                  isInvalid={!!errors.password}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.password}\n                </Form.Control.Feedback>\n              </Form.Group>\n              <StyledButton variant=\"primary\" type=\"submit\">\n                Submit\n              </StyledButton>\n            </StyledForm>\n          )}\n        </Formik>\n      }\n  </>\n    )\n}\n\nexport default RegisterPage;"],"names":["StyledButton","styled","Button","p","theme","colors","white","accent","borders","normal","black","StyledForm","Form","space","radii","dispatch","useDispatch","loggedIn","useSelector","getIsLoggedIn","to","replace","initialValues","name","email","password","validationSchema","Yup","required","onSubmit","resetForm","console","log","register","handleSubmit","handleChange","values","errors","touched","isInvalid","noValidate","className","controlId","type","placeholder","value","onChange","S","variant"],"sourceRoot":""}